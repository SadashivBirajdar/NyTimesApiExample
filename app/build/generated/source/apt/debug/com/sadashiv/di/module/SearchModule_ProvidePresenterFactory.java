// Generated by Dagger (https://google.github.io/dagger).
package com.sadashiv.di.module;

import com.sadashiv.presenter.SearchPresenter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class SearchModule_ProvidePresenterFactory implements Factory<SearchPresenter> {
  private final SearchModule module;

  public SearchModule_ProvidePresenterFactory(SearchModule module) {
    this.module = module;
  }

  @Override
  public SearchPresenter get() {
    return Preconditions.checkNotNull(
        module.providePresenter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static SearchModule_ProvidePresenterFactory create(SearchModule module) {
    return new SearchModule_ProvidePresenterFactory(module);
  }

  public static SearchPresenter proxyProvidePresenter(SearchModule instance) {
    return Preconditions.checkNotNull(
        instance.providePresenter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
